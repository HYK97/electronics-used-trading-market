server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
mybatis:
  configuration:
    map-underscore-to-camel-case: true
    use-generated-keys: true
  type-aliases-package: kr.flab.tradingmarket.domain
  mapper-locations: classpath:mapper/**/*.xml
spring:
  profiles:
    group:
      "test": testDB,common
      "dev":  devDB,common,awsS3
      "prod": prodDB,common,awsS3
---
spring:
  config:
    activate:
      on-profile: testDB
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1;
    username: sa
    password:
---
spring:
  config:
    activate:
      on-profile: devDB
  datasource:
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    url: ${dev.master.url}
    username: ${dev.master.username}
    password: ${dev.master.password}
  session:
    storage-type: redis
  redis:
    host: ${dev.redis.host}
    port: ${dev.redis.port}
    password: ${dev.redis.password}
  devtools:
    remote:
      restart:
        enabled: true
---
spring:
  config:
    activate:
      on-profile: prodDB
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${prod.master.url}
    username: ${prod.master.username}
    password: ${prod.master.password}
  session:
    storage-type: redis
  redis:
    host: ${prod.redis.host}
    port: ${prod.redis.port}
    password: ${prod.redis.password}
---
spring:
  config:
    activate:
      on-profile: common
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
---
spring:
  config:
    activate:
      on-profile: awsS3
cloud:
  aws:
    credentials:
      access-key: ${aws.accesskey}
      secret-key: ${aws.secretkey}
    s3:
      bucket: ${aws.bucket}
    region: #S3 지역
      static: kr-standard
    stack:
      auto: false
    end-point: ${aws.endpoint}